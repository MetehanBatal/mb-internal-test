/*! lozad.js - v1.16.0 - 2020-09-06
* https://github.com/ApoorvSaxena/lozad.js
* Copyright (c) 2020 Apoorv Saxena; Licensed MIT */const l=typeof document<"u"&&document.documentMode,A={rootMargin:"0px",threshold:0,load(t){if(t.nodeName.toLowerCase()==="picture"){let a=t.querySelector("img"),i=!1;a===null&&(a=document.createElement("img"),i=!0),l&&t.getAttribute("data-iesrc")&&(a.src=t.getAttribute("data-iesrc")),t.getAttribute("data-alt")&&(a.alt=t.getAttribute("data-alt")),i&&t.append(a)}if(t.nodeName.toLowerCase()==="video"&&!t.getAttribute("data-src")&&t.children){const a=t.children;let i;for(let o=0;o<=a.length-1;o++)i=a[o].getAttribute("data-src"),i&&(a[o].src=i);t.load()}t.getAttribute("data-poster")&&(t.poster=t.getAttribute("data-poster")),t.getAttribute("data-src")&&(t.src=t.getAttribute("data-src")),t.getAttribute("data-srcset")&&t.setAttribute("srcset",t.getAttribute("data-srcset"));let e=",";if(t.getAttribute("data-background-delimiter")&&(e=t.getAttribute("data-background-delimiter")),t.getAttribute("data-background-image"))t.style.backgroundImage=`url('${t.getAttribute("data-background-image").split(e).join("'),url('")}')`;else if(t.getAttribute("data-background-image-set")){const a=t.getAttribute("data-background-image-set").split(e);let i=a[0].substr(0,a[0].indexOf(" "))||a[0];i=i.indexOf("url(")===-1?`url(${i})`:i,a.length===1?t.style.backgroundImage=i:t.setAttribute("style",(t.getAttribute("style")||"")+`background-image: ${i}; background-image: -webkit-image-set(${a}); background-image: image-set(${a})`)}t.getAttribute("data-toggle-class")&&t.classList.toggle(t.getAttribute("data-toggle-class"))},loaded(){}};function c(t){t.setAttribute("data-loaded",!0)}function k(t){t.getAttribute("data-placeholder-background")&&(t.style.background=t.getAttribute("data-placeholder-background"))}const b=t=>t.getAttribute("data-loaded")==="true",p=(t,e)=>(a,i)=>{a.forEach(o=>{(o.intersectionRatio>0||o.isIntersecting)&&(i.unobserve(o.target),b(o.target)||(t(o.target),c(o.target),e(o.target)))})},f=(t,e=document)=>t instanceof Element?[t]:t instanceof NodeList?t:e.querySelectorAll(t);function h(t=".lozad",e={}){const{root:a,rootMargin:i,threshold:o,load:g,loaded:u}=Object.assign({},A,e);let s;typeof window<"u"&&window.IntersectionObserver&&(s=new IntersectionObserver(p(g,u),{root:a,rootMargin:i,threshold:o}));const n=f(t,a);for(let r=0;r<n.length;r++)k(n[r]);return{observe(){const r=f(t,a);for(let d=0;d<r.length;d++)if(!b(r[d])){if(s){s.observe(r[d]);continue}g(r[d]),c(r[d]),u(r[d])}},triggerLoad(r){b(r)||(g(r),c(r),u(r))},observer:s}}export{h as l};
